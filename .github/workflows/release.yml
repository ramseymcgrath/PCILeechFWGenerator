name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools setuptools_scm wheel twine
    
    - name: Build packages
      run: |
        python -m build
    
    - name: Verify packages
      run: |
        twine check dist/*
    
    - name: Get version and changelog
      id: version
      run: |
        VERSION=$(python -c "import setuptools_scm; print(setuptools_scm.get_version())")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract changelog for this version
        if [ -f "CHANGELOG.rst" ]; then
          # Extract section between current version and next version/end
          CHANGELOG=$(awk "/^$VERSION/,/^[0-9]/ {if (/^[0-9]/ && !/^$VERSION/) exit; print}" CHANGELOG.rst | head -n -1)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Release $VERSION" >> $GITHUB_OUTPUT
        fi
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: v${{ steps.version.outputs.version }}
        body: ${{ steps.version.outputs.changelog }}
        files: |
          dist/*.tar.gz
          dist/*.whl
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
      if: ${{ !contains(github.ref_name, 'rc') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha') }}
